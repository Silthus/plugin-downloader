buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'io.freefair.lombok' version '5.3.0'
    id 'java'
    id 'jacoco'
    id 'idea'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

sourceCompatibility = 8
targetCompatibility = 8

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'net.silthus.downloader.Bootstrap'
        )
    }
}


archivesBaseName = project.property("pluginName")

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation 'com.custardsource.dybdob:java-diff-utils-copy:1.0.1'
    implementation 'com.google.guava:guava:20.0'
    implementation 'net.sf.jopt-simple:jopt-simple:4.9'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:4.5.3.201708160445-r'
    implementation 'org.slf4j:slf4j-jdk14:1.7.25'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.10.4'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

shadowJar {
    classifier = ''
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

defaultTasks 'build'
